openapi: 3.0.0
info:
  title: asembl-v3
  version: '3.0'
  description: ''
servers:
  - url: 'https://appstage.asemblco.com/api/v3'
    description: stage
paths:
  '/user/{id}/categories':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: User categories
      operationId: put-user-id-categories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        name:
                          type: string
                        description:
                          type: string
                        priority:
                          type: number
                        main_image_path:
                          type: string
                          description: image relative path
                        thumb_image_path:
                          type: string
                          description: thumb relative path
                        sub_category_list:
                          type:
                            - string
                            - array
                          items:
                            type: object
                            properties:
                              id:
                                type: number
                              name:
                                type: string
                              description:
                                type: string
                              priority:
                                type: number
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters:
        - schema:
            type: string
          in: header
          name: AccessToken
          required: true
          description: Logged user access token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: |
                Categories
              properties:
                categories:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: parent category id
                      sub_category_list:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: number
                              description: child category id
                          required:
                            - id
                    required:
                      - id
              required:
                - categories
            examples:
              example-1: {}
        description: ''
      description: ''
  '/event/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Event details
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  descriptions:
                    type: string
                  entry_fee:
                    type: string
                  event_url:
                    type: string
                  image:
                    type: string
                    description: Absolute path of main image
                  dates:
                    type: object
                    properties:
                      calendar_date:
                        type: string
                        description: Date in format yyyy-mm-dd
                        format: date
                      start_date:
                        type: string
                        description: 'date time format yyyy-mm-dd HH:mm:ss'
                        format: date-time
                      finish_date:
                        type: string
                        description: 'date time format yyyy-mm-dd HH:mm:ss'
                        format: date-time
                  address:
                    type: object
                    properties:
                      street_address:
                        type: string
                      city:
                        type: string
                      state:
                        type: string
                      post_code:
                        type: string
                      lat:
                        type: string
                      lng:
                        type: string
                  owner:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      thumb_image_path:
                        type: string
                        description: Absolute path
                  categories:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        parent_id:
                          type: integer
                        name:
                          type: string
                  event_attending_status:
                    type: string
                    description: Only returnet if user is logged
      operationId: get-events-id
      description: Return events details
      parameters:
        - schema:
            type: string
          in: header
          name: AccessToken
          description: Logged user token
  '/event/{id}/guest':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Event guests
      tags: []
      responses: {}
      operationId: get-event-id-guest
      description: Return five guests with name and thumb and a total event guests count.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                total_guests:
                  type: string
                users_guests:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      thumb_image_path:
                        type: string
  /event:
    post:
      summary: Event store
      operationId: post-event
      responses:
        '200':
          description: OK
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      $ref: '#/components/schemas/categories'
                  image:
                    type: string
                    description: 'image type. only jpg, jpeg and png files. 10mb maximum'
                  title:
                    type: string
                  address:
                    type: string
                  city:
                    type: string
                  state:
                    type: string
                  lat:
                    type:
                      - number
                      - string
                  lng:
                    type:
                      - number
                      - string
                  post_code:
                    type: string
                    maxLength: 50
                    minLength: 1
                  description:
                    type: string
                  entry_fee:
                    type: number
                  event_url:
                    type: string
                    description: needs the http protocol
                  starting_utc_date_time:
                    type: string
                    format: date-time
                  end_utc_date_time:
                    type: string
                    format: date-time
                  age_group:
                    type: string
                    description: ''
                    example: 0-100
                  genders:
                    type: array
                    description: 'm, f or nb'
                    items:
                      type: string
                      enum:
                        - m
                        - f
                        - nb
                  invitation_to:
                    type: integer
                    minimum: 1
                    maximum: 5
                  groups:
                    type: array
                    uniqueItems: false
                    description: Array of selected groups. Is required if invite to is 5
                    items:
                      type: integer
                  contacts:
                    type: array
                    description: Required if invite_to is 2.
                    items:
                      type: integer
                required:
                  - categories
                  - title
                  - address
                  - lat
                  - lng
                  - starting_utc_date_time
                  - age_group
                  - genders
                  - invitation_to
      description: Add new event
      parameters:
        - schema:
            type: string
          in: header
          name: AccessToken
          required: true
  '/user/{id}/event/{type}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
          enum:
            - going
            - went
        name: type
        in: path
        required: true
    get:
      summary: User events
      tags: []
      responses: {}
      operationId: get-user-id-event-type
      parameters:
        - schema:
            type: string
          in: header
          name: AcessToken
          required: true
      description: "Return paginated user's going or went events"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: boolean
                message:
                  type: string
                data:
                  type: object
                  properties:
                    events:
                      type: object
                      properties:
                        total:
                          type: integer
                        per_page:
                          type: integer
                        current_page:
                          type: integer
                        last_page:
                          type: integer
                        next_page_url:
                          type: string
                        prev_page_url:
                          type: string
                        from:
                          type: integer
                        to:
                          type: integer
                        data:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              title:
                                type: string
                              starting_utc_date_time:
                                type: string
                              image:
                                type: string
            examples:
              Sucess example:
                value:
                  status: true
                  message: User events
                  data:
                    events:
                      total: 500
                      per_page: 20
                      current_page: 2
                      last_page: 25
                      next_page_url: 'http://localhost/api/v3/user/129/event/went?page=3'
                      prev_page_url: 'http://localhost/api/v3/user/129/event/went?page=1'
                      from: 21
                      to: 40
                      data:
                        - id: 7157
                          title: Laurin Talese
                          starting_utc_date_time: '2020-02-20 00:00:00'
                          image: /files/event_images/t_716520200121074423.jpg
                        - id: 7224
                          title: Global Connection Night February 2020
                          starting_utc_date_time: '2020-02-20 02:00:00'
                          image: /files/event_images/t_181520200125123959.jpg
        description: Paginated result
components:
  schemas:
    categories:
      title: categories
      type: object
      properties:
        id:
          type: string
          description: parent id
        children:
          type: array
          description: "children's id array"
          items:
            type: integer
    Error:
      title: Error
      type: object
      properties:
        status:
          type: boolean
        error:
          type:
            - string
            - array
          items: {}
      description: Default error
  securitySchemes: {}
